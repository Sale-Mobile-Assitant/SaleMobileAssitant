<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:Converter="clr-namespace:SalesMMobileAssitant.ViewModel"
                    xmlns:local="clr-namespace:SalesMMobileAssitant.Style">

    <Converter:IndexConverter x:Key="IndexConverter" />


    <!--Packicon in listview.gridview -->
    <Style TargetType="materialDesign:PackIcon" x:Key="PackIconAndCricle">
        <Setter Property="Foreground" Value="Red"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Cancel">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Delivered">
                <Setter Property="Foreground" Value="Blue"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Pending">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag,ElementName=TextBlockStatus}" Value="1">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Verifying">
                <Setter Property="Foreground" Value="Yellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="2">
                <Setter Property="Foreground" Value="Yellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Completed">
                <Setter Property="Foreground" Value="Green"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="3">
                <Setter Property="Foreground" Value="Green"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- loai5 2 -->
    <Style TargetType="TextBlock" x:Key="PackIconAndCricle2">
        <Setter Property="Foreground" Value="Red"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag,ElementName=TextBlockStatus}" Value="1">
                <Setter Property="Text" Value="Pending"/>
                <Setter Property="Foreground" Value="#374AFB"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag,ElementName=TextBlockStatus}" Value="2">
                <Setter Property="Text" Value="Verifying"/>
                <Setter Property="Foreground" Value="Yellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag,ElementName=TextBlockStatus}" Value="3">
                <Setter Property="Text" Value="Completed"/>
                <Setter Property="Foreground" Value="Green"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- Border Cricle style Status -->
    <Style TargetType="Border" x:Key="BorderTextBlockCricleColorOnStatus">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Success">
                <Setter Property="Background" Value="#E8F9F8"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Delivered">
                <Setter Property="Background" Value="#E8F9F8"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Done">
                <Setter Property="Background" Value="#FFEBF1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Pending">
                <Setter Property="Background" Value="#EBEDFF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag,ElementName=TextBlockStatus}" Value="1">
                <Setter Property="Background" Value="#EBEDFF"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Canceled">
                <Setter Property="Background" Value="#FFF8E8"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="2">
                <Setter Property="Background" Value="Yellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="3">
                <Setter Property="Background" Value="Green"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlock color Status-->

    <Style TargetType="TextBlock" x:Key="TextBlockForegroundOnStatus">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Success">
                <Setter Property="Foreground" Value="#1DC9B7"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Delivered">
                <Setter Property="Foreground" Value="#1DC9B7"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Done">
                <Setter Property="Foreground" Value="#FD4189"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Pending">
                <Setter Property="Foreground" Value="#374AFB"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Text,ElementName=TextBlockStatus}" Value="Canceled">
                <Setter Property="Foreground" Value="#FFB822"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    
    <!-- mẽo sài -->

    <Style TargetType="StackPanel" x:Key="PanelStyleElementChildTextBlocklol">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Tag,ElementName=TotalRevenueName}" Value="Bigger">
                        <Setter Property="Foreground" Value="LightGreen"/>
                        <Setter Property="Uid" Value="ArrowUp"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Tag,ElementName=TotalRevenueName}" Value="Small">
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="Uid" Value="ArrowDown"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    
    <!-- sài tốt -->

    <Style TargetType="StackPanel" x:Key="PanelStyleElementChildTextBlock">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="Tag" Value="Bigger">
                        <Setter Property="Foreground" Value="LightGreen"/>
                        <Setter Property="Uid" Value="ArrowUp"/>
                    </Trigger>
                    <Trigger Property="Tag" Value="Small">
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="Uid" Value="ArrowDown"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    
   
    <!--stdsdasda-->
 

    <Style x:Key="LvItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="LightBlue" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="SkyBlue" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- dkmm-->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="stylecombobx" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>